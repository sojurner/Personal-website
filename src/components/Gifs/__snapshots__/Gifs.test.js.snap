// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Gifs should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Gifs />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="jify"
        >
          PAUL
           LAND
        </h1>,
        <form
          className="gif-form"
          onSubmit={[Function]}
        >
          <input
            className="gif-input"
            onChange={[Function]}
            placeholder="Search Gifs"
            type="text"
            value=""
          />
          <i
            className="fab fa-searchengin"
            onClick={[Function]}
          />
        </form>,
        "",
        <div
          id="scrolling"
        >
          <InfiniteScroll
            className="infinite-scroll"
            dataLength={0}
            disableBrowserPullToRefresh={true}
            hasMore={true}
            loader={
              <h4>
                Loading...
              </h4>
            }
            next={[Function]}
            pullDownToRefreshContent={
              <h3>
                Pull down to refresh
              </h3>
            }
            pullDownToRefreshThreshold={100}
            releaseToRefreshContent={
              <h3>
                Release to refresh
              </h3>
            }
            scrollableTarget="scrolling"
          />
        </div>,
      ],
      "className": "gif-container",
      "id": "gifs",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "PAUL",
            " LAND",
          ],
          "className": "jify",
        },
        "ref": null,
        "rendered": Array [
          "PAUL",
          " LAND",
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="gif-input"
              onChange={[Function]}
              placeholder="Search Gifs"
              type="text"
              value=""
            />,
            <i
              className="fab fa-searchengin"
              onClick={[Function]}
            />,
          ],
          "className": "gif-form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "gif-input",
              "onChange": [Function],
              "placeholder": "Search Gifs",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fab fa-searchengin",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
        ],
        "type": "form",
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <InfiniteScroll
            className="infinite-scroll"
            dataLength={0}
            disableBrowserPullToRefresh={true}
            hasMore={true}
            loader={
              <h4>
                Loading...
              </h4>
            }
            next={[Function]}
            pullDownToRefreshContent={
              <h3>
                Pull down to refresh
              </h3>
            }
            pullDownToRefreshThreshold={100}
            releaseToRefreshContent={
              <h3>
                Release to refresh
              </h3>
            }
            scrollableTarget="scrolling"
          />,
          "id": "scrolling",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [],
            "className": "infinite-scroll",
            "dataLength": 0,
            "disableBrowserPullToRefresh": true,
            "hasMore": true,
            "loader": <h4>
              Loading...
            </h4>,
            "next": [Function],
            "pullDownToRefreshContent": <h3>
              Pull down to refresh
            </h3>,
            "pullDownToRefreshThreshold": 100,
            "releaseToRefreshContent": <h3>
              Release to refresh
            </h3>,
            "scrollableTarget": "scrolling",
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="jify"
          >
            PAUL
             LAND
          </h1>,
          <form
            className="gif-form"
            onSubmit={[Function]}
          >
            <input
              className="gif-input"
              onChange={[Function]}
              placeholder="Search Gifs"
              type="text"
              value=""
            />
            <i
              className="fab fa-searchengin"
              onClick={[Function]}
            />
          </form>,
          "",
          <div
            id="scrolling"
          >
            <InfiniteScroll
              className="infinite-scroll"
              dataLength={0}
              disableBrowserPullToRefresh={true}
              hasMore={true}
              loader={
                <h4>
                  Loading...
                </h4>
              }
              next={[Function]}
              pullDownToRefreshContent={
                <h3>
                  Pull down to refresh
                </h3>
              }
              pullDownToRefreshThreshold={100}
              releaseToRefreshContent={
                <h3>
                  Release to refresh
                </h3>
              }
              scrollableTarget="scrolling"
            />
          </div>,
        ],
        "className": "gif-container",
        "id": "gifs",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "PAUL",
              " LAND",
            ],
            "className": "jify",
          },
          "ref": null,
          "rendered": Array [
            "PAUL",
            " LAND",
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="gif-input"
                onChange={[Function]}
                placeholder="Search Gifs"
                type="text"
                value=""
              />,
              <i
                className="fab fa-searchengin"
                onClick={[Function]}
              />,
            ],
            "className": "gif-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "gif-input",
                "onChange": [Function],
                "placeholder": "Search Gifs",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fab fa-searchengin",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
          ],
          "type": "form",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <InfiniteScroll
              className="infinite-scroll"
              dataLength={0}
              disableBrowserPullToRefresh={true}
              hasMore={true}
              loader={
                <h4>
                  Loading...
                </h4>
              }
              next={[Function]}
              pullDownToRefreshContent={
                <h3>
                  Pull down to refresh
                </h3>
              }
              pullDownToRefreshThreshold={100}
              releaseToRefreshContent={
                <h3>
                  Release to refresh
                </h3>
              }
              scrollableTarget="scrolling"
            />,
            "id": "scrolling",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [],
              "className": "infinite-scroll",
              "dataLength": 0,
              "disableBrowserPullToRefresh": true,
              "hasMore": true,
              "loader": <h4>
                Loading...
              </h4>,
              "next": [Function],
              "pullDownToRefreshContent": <h3>
                Pull down to refresh
              </h3>,
              "pullDownToRefreshThreshold": 100,
              "releaseToRefreshContent": <h3>
                Release to refresh
              </h3>,
              "scrollableTarget": "scrolling",
            },
            "ref": null,
            "rendered": Array [],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
